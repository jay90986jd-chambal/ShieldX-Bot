import json
import os

# JSON data file path
DATA_FILE = "data.json"

# Default structure
DEFAULT_DATA = {
    "warnings": {},        # user_id: warning_count
    "punishments": {},     # user_id: punishment_type
    "settings": {
        "strict_mode": True,
        "warning_limit": 3,
        "default_punishment": "kick"  # kick, ban, mute
    }
}

# Load or initialize JSON data
def load_data():
    if not os.path.exists(DATA_FILE):
        with open(DATA_FILE, "w") as f:
            json.dump(DEFAULT_DATA, f, indent=4)
        return DEFAULT_DATA
    else:
        with open(DATA_FILE, "r") as f:
            try:
                return json.load(f)
            except json.JSONDecodeError:
                # corrupted file reset
                with open(DATA_FILE, "w") as fw:
                    json.dump(DEFAULT_DATA, fw, indent=4)
                return DEFAULT_DATA

# Save JSON data
def save_data(data):
    with open(DATA_FILE, "w") as f:
        json.dump(data, f, indent=4)

# Example: add warning
def add_warning(user_id):
    data = load_data()
    if str(user_id) not in data["warnings"]:
        data["warnings"][str(user_id)] = 0
    data["warnings"][str(user_id)] += 1

    # Check punishment
    if data["warnings"][str(user_id)] >= data["settings"]["warning_limit"]:
        data["punishments"][str(user_id)] = data["settings"]["default_punishment"]
        data["warnings"][str(user_id)] = 0  # reset after punishment

    save_data(data)
    return data["warnings"][str(user_id)], data.get("punishments", {}).get(str(user_id), None)

# Example usage
if __name__ == "__main__":
    user_id = 123456789
    warnings, punishment = add_warning(user_id)
    print(f"User {user_id} warnings: {warnings}, punishment: {punishment}")
